var gulp = require('gulp'),
    changed = require('gulp-changed'),
    sass = require('gulp-sass'),
    sftp = require('gulp-sftp'),
    sourcemaps = require('gulp-sourcemaps');

var sftpOpts = function(dest) {
    return {
        host: 'server', // Replace this value with the domain of the remote server
        auth: 'keyMain', // This tells Node to look for a .ftppass file
        remotePath: '/srv/sites/meters/' + dest // Replace this with the path to the site's folder on the remote server
    }
};

gulp.task('upload-blocks', function() {
    gulp.src('./blocks/html/**/*.inc')
        .pipe(changed('./.build/blocks/html'))
        .pipe(gulp.dest('./.build/blocks/html'))
        .pipe(sftp(sftpOpts('blocks/html')));

});

gulp.task('upload-templates', function(){
    gulp.src('./templates/html/**/*.inc')
        .pipe(changed('./.build/templates/html'))
        .pipe(gulp.dest('./.build/templates/html'))
        .pipe(sftp(sftpOpts('templates/html')));

});

gulp.task('build-sass', function(){
    gulp.src('./public/css/local/screen.scss')
        .pipe(sourcemaps.init())
        .pipe(sass({
            errLogToConsole: true,
            outputStyle: 'compressed'
        }))
        .pipe(sourcemaps.write('./public/css/local'))
        .pipe(gulp.dest('./public/css/local'))
        .pipe(sftp(sftpOpts('public/css/local')));
});

gulp.task('watch', function(){
    gulp.watch('./public/css/local/**/*.scss', ['build-sass']);
    gulp.watch('./blocks/html/**/*.inc', ['upload-blocks']);
    gulp.watch('./templates/html/**/*.inc', ['upload-templates']);
});
