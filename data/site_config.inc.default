<?php
define('APPLICATION_NAME','application');

/**
 * URL Generation settings
 *
 * Do NOT use trailing slashes
 *
 * If your site is being proxied, change BASE_HOST to the hostname
 * used for the outside world.
 */
define('BASE_URI' , '/application');
#define('BASE_HOST', isset($_SERVER['HTTP_X_FORWARDED_HOST'])
#                        ? $_SERVER['HTTP_X_FORWARDED_HOST']
#                        : $_SERVER['SERVER_NAME']);
define('BASE_HOST', $_SERVER['SERVER_NAME']);
define('BASE_URL' , "$_SERVER[REQUEST_SCHEME]://".BASE_HOST.BASE_URI);

/**
 * Javascript libraries
 */
define('JQUERY',            BASE_URI.'/js/vendor/jquery-2.1.1');
define('JQUERY_UI',         BASE_URI.'/js/vendor/jquery-ui-1.11.1');
define('JQUERY_TIMEPICKER', BASE_URI.'/js/vendor/jquery-timepicker-1.4.12');

/**
 * Used when there's an error on the site.  The Framework will
 * print out a nice error message, encouraging users to report any problems
 * See: Blossom\Classes\Error
 */
define('ADMINISTRATOR_NAME','Site Admin');
define('ADMINISTRATOR_EMAIL','admin@servername.com');

/**
 * Database Setup
 * Refer to the PDO documentation for DSN sytnax for your database type
 * http://www.php.net/manual/en/pdo.drivers.php
 */
$DATABASES = [
    'default' => [
        'driver'   => 'Pdo_Mysql',
        'dsn'      => 'mysql:dbname=meters;host=localhost',
        'username' => 'user',
        'password' => 'pass',
        'options'  => []
    ]
];

/**
 * Directory Configuration
 *
 * This supports doing user authentication from multiple external
 * directories, such as LDAP or ADS. This is required since city staff
 * are in a seperate LDAP directory from public user accounts.
 * Classes that implement ExternalIdentity should have an entry here.
 *
 * See: ExternalIdentity
 */
// Example for ADS style authentication
$DIRECTORY_CONFIG = array(
//	'Employee'=>array(
//		'DIRECTORY_SERVER'=>'ldaps://example.org:636',
//		'DIRECTORY_BASE_DN'=>'OU=Department,DC=example,DC=org',
//		'DIRECTORY_USERNAME_ATTRIBUTE'=>'CN',
//		'DIRECTORY_USER_BINDING'=>'{username}@example.org',
//		'DIRECTORY_ADMIN_BINDING'=>'admin@example.org',
//		'DIRECTORY_ADMIN_PASS'=>'password'
//	)
);
// Example for LDAP style authentication
//$DIRECTORY_CONFIG = array(
//	'Employee'=>array(
//		'DIRECTORY_SERVER'=>'ldaps://example.org:636');
//		'DIRECTORY_BASE_DN'=>'ou=people,o=ldap.domain.somewhere');
//		'DIRECTORY_USERNAME_ATTRIBUTE'=>'uid');
//		'DIRECTORY_USER_BINDING'=>'uid={username},'.DIRECTORY_BASE_DN);
//		'DIRECTORY_ADMIN_BINDING'=>'uid=admin,'.DIRECTORY_BASE_DN);
//		'DIRECTORY_ADMIN_PASS'=>'password');
//	)
//);

/**
 * CAS authentication http://www.jasig.org/cas
 *
 * https://wiki.jasig.org/display/CASC/phpCAS
 *
 * phpCAS is a PHP library for handling the calls to the CAS service
 * It is the official library, part of the Jasig CAS project
 */
//define('CAS',APPLICATION_HOME.'/libraries/phpCAS');
//define('CAS_SERVER','cas.somewhere.org');
//define('CAS_URI','cas');

define('DATE_FORMAT', 'Y-m-d');
define('TIME_FORMAT', 'g:i a');
define('DATETIME_FORMAT', DATE_FORMAT.' '.TIME_FORMAT);

define('LOCALE', 'en_US');

/**
 * Set how we want to handle errors
 * PHP_DEFAULT - do whatever's configured in php.ini
 *
 * If you do not define error handling to PHP_DEFAULT
 * the custom error handlers kick in.  All of the custom error display
 * frunctions are in BLOSSOM/Classes/Error.php.  The custom error
 * function decide what to do based on $ERROR_REPORING array values
 *
 * PRETTY_PRINT - Display a message in the browser
 * EMAIL_ADMIN - email the Administrator
 * EMAIL_USER - email the logged in user
 * SKIDDER - post errors to a Skidder server (see config below)
*/
define('ERROR_REPORTING','PHP_DEFAULT');
//define('ERROR_REPORTING','CUSTOM');
//$ERROR_REPORTING = array('PRETTY_PRINT','SKIDDER');
if (ERROR_REPORTING != 'PHP_DEFAULT') {
    set_error_handler         ('Blossom\Classes\Error::customErrorHandler');
    set_exception_handler     ('Blossom\Classes\Error::customExceptionHandler');
    register_shutdown_function('Blossom\Classes\Error::shutdownHandler');
}

/**
 * Skidder is a web service for error notifications.  Error reporting supports
 * posting errors to a Skidder server.  You must register for an application_id
 * on the skidder server you want to post errors to.
 */
//define('SKIDDER_URL','http://localhost/skidder/home.php');
//define('SKIDDER_APPLICATION_ID',);
